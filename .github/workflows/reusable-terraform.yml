---
on:
  workflow_call:
    inputs:
      environments:
        description: "List of environments to run Terraform against"
        required: true
        type: string

permissions: {}

concurrency:
  group: terraform

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(inputs.environments) }}
    defaults:
      run:
        working-directory: terraform
    env:
      TF_IN_AUTOMATION: true
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5.0.0
        with:
          persist-credentials: false

      - name: Set Up Terraform
        id: install_terraform
        uses: hashicorp/setup-terraform@v3.1.2

      - name: Configure AWS Credentials
        id: configure_aws_credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-region: eu-west-2
          role-to-assume: arn:aws:iam::509399598587:role/analytical-platform-github-actions

      - name: Initialise Terraform
        id: initialise_terraform
        shell: bash
        run: |
          terraform init -upgrade -input=false

      - name: Terraform Workspace
        id: terraform_workspace
        shell: bash
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: |
          terraform workspace select -or-create "${ENVIRONMENT}"

      - name: Terraform Validate
        if: github.ref != 'refs/heads/main'
        id: terraform_validate
        shell: bash
        run: |
          terraform validate -no-color

      - name: Terraform Plan
        id: terraform_plan
        shell: bash
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: |
          terraform plan -input=false -out="${ENVIRONMENT}.tfplan"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        id: terraform_apply
        shell: bash
        env:
          ENVIRONMENT: ${{ matrix.environment }}
        run: |
          terraform apply -auto-approve -input=false "${ENVIRONMENT}.tfplan"
