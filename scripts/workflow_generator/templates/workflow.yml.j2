{{ meta.project }}.{{ meta.workflow }}:
  default_args:
    depends_on_past: {{ dag.depends_on_past|default(False) }}
    {%- if dag.end_date %}
    end_date: {{ dag.end_date }}
    {% endif %}
    owner: {{ tags.owner }}
    retries: {{ dag.retries|default(0) }}
    {%- if dag.retries %}
    retry_delay: {{ dag.retry_delay|default(300) }}
    {%- endif %}
    start_date: {{ dag.start_date|default("2025-01-01") }}
    {%- if notifications is defined and notifications.slack_channel %}
    on_failure_callback:
      callback: airflow.providers.slack.notifications.slack.send_slack_notification
      channel: {{ notifications.slack_channel }}
      text: |
        :airflow: *Airflow {{ meta.environment|capitalize }}*
        :x: {{ meta.project }}.{{ meta.workflow }} has failed.
        *Task*: {% raw %}{{ ti.task_id }}{% endraw %}
        *Logs*: {% raw %}{{ ti.log_url }}{% endraw %}
    on_success_callback:
      callback: airflow.providers.slack.notifications.slack.send_slack_notification
      channel: {{ notifications.slack_channel }}
      text: |
        :airflow: *Airflow {{ meta.environment|capitalize }}*
        :white_check_mark: {{ meta.project }}.{{ meta.workflow }} has succeeded.
        *Task*: {% raw %}{{ ti.task_id }}{% endraw %}
        *Logs*: {% raw %}{{ ti.log_url }}{% endraw %}
    {%- endif %}
    {%- if notifications is defined and notifications.emails %}
    email: {{ notifications.emails }}
    {%- endif %}
  catchup: {{ dag.catchup|default(False) }}
  is_paused_upon_creation: {{ dag.is_paused_upon_creation|default(False) }}
  max_active_runs: {{ dag.max_active_runs|default(1) }}
  schedule_interval: {{ dag.schedule|default(null) }}
  tasks:
    {%- if dag.tasks %}
    {%- for task_name, task in dag.tasks.items() %}
    {{ task_name }}:
      operator: analytical_platform.standard_operator.AnalyticalPlatformStandardOperator
      name: {{ meta.project }}-{{ meta.workflow }}-{{ task_name }}
      {%- if dag.tasks.retries %}
      retries: {{ task.retries|default(dag.retries|default(0)) }}
      {%- endif %}
      task_id: {{ meta.project }}-{{ meta.workflow }}-{{ task_name }}
      compute_profile: {{ task.compute_profile or dag.compute_profile or "general-spot-1vcpu-4gb" }}
      {%- if task.repository %}
      image: 509399598587.dkr.ecr.eu-west-2.amazonaws.com/{{ task.repository }}:{{ task.tag }}
      {%- else %}
      image: 509399598587.dkr.ecr.eu-west-2.amazonaws.com/{{ dag.repository }}:{{ dag.tag }}
      {%- endif %}
      hmcts_sdp_networking: {{ task.hmcts_sdp_networking|default(dag.hmcts_sdp_networking|default(false)) }}
      {%- if task.env_vars or dag.env_vars %}
      {%- set merged_env_vars = dag.env_vars | default({}) | merge_dicts(task.env_vars | default({})) %}
      env_vars:
        {%- for k, v in merged_env_vars.items() %}
        {{ k }}: {{ v }}
        {%- endfor %}
      {%- endif %}
      {%- if secrets %}
      secrets: {{ secrets }}
      {%- endif %}
      environment: {{ meta.environment }}
      project: {{ meta.project }}
      workflow: {{ meta.workflow }}
      {%- if task.dependencies %}
      dependencies: {{ task.dependencies }}
      {%- endif %}
    {%- endfor %}
    {%- else %}
    main:
      operator: analytical_platform.standard_operator.AnalyticalPlatformStandardOperator
      name: {{ meta.project }}.{{ meta.workflow }}
      task_id: {{ meta.project }}-{{ meta.workflow }}
      compute_profile: {{ dag.compute_profile|default("general-spot-1vcpu-4gb") }}
      image: 509399598587.dkr.ecr.eu-west-2.amazonaws.com/{{ dag.repository }}:{{ dag.tag }}
      hmcts_sdp_networking: {{ dag.hmcts_sdp_networking|default(false) }}
      {%- if dag.env_vars %}
      env_vars:
        {%- for k, v in dag.env_vars.items() %}
        {{ k }}: {{ v }}
        {%- endfor %}
      {%- endif %}
      {%- if secrets %}
      secrets: {{ secrets }}
      {%- endif %}
      environment: {{ meta.environment }}
      project: {{ meta.project }}
      workflow: {{ meta.workflow }}
    {%- endif %}
